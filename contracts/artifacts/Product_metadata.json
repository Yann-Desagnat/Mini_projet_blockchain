{
	"compiler": {
		"version": "0.8.0+commit.c7dfd78e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_beneficiary",
						"type": "address"
					}
				],
				"name": "AddedBeneficiary",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "actors",
				"outputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "enum Users.Role",
						"name": "roles",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "nameProduct",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "nbBatch",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "nbProductsPerBatch",
						"type": "uint256"
					}
				],
				"name": "addProduct",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_beneficiaries",
						"type": "address"
					}
				],
				"name": "addToWhitelist",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "id",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "enum Users.Role",
						"name": "role",
						"type": "uint8"
					}
				],
				"name": "addUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getUsersCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "products",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "nameProduct",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "nbBatch",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "nbProductsPerBatch",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "lastOwner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "buyingDate",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_beneficiary",
						"type": "address"
					}
				],
				"name": "removeFromWhitelist",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "seeAllProdducts",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "nameProduct",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "nbBatch",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nbProductsPerBatch",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "lastOwner",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "buyingDate",
								"type": "uint256"
							}
						],
						"internalType": "struct Users.Products[]",
						"name": "productList",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_productId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "transferProductOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "users",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "whitelist",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addToWhitelist(address)": {
					"details": "Adds list of addresses to whitelist. Not overloaded due to limitations with truffle testing.",
					"params": {
						"_beneficiaries": "Addresses to be added to the whitelist"
					}
				},
				"removeFromWhitelist(address)": {
					"details": "Removes single address from whitelist.",
					"params": {
						"_beneficiary": "Address to be removed to the whitelist"
					}
				},
				"transferOwnership(address)": {
					"details": "Allows the current owner to transfer control of the contract to a newOwner.",
					"params": {
						"newOwner": "The address to transfer ownership to."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Products.sol": "Product"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Owner.sol": {
			"keccak256": "0xdf7c12d0e5e7a54bc5271036ce6322acf25111218ad2cd11e34893d85819ca25",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://24fe99e9a5b5d545abb5128836ffeb2949c2fd9ca64c427a974ae4deac03cece",
				"dweb:/ipfs/QmPhC65ozpwvVU2rXhb19hWqgXFyTer4sknqryba8a1gjh"
			]
		},
		"contracts/Products.sol": {
			"keccak256": "0x4111bc10332e6e25e8e0bbe54640df0bd36e968efc038e73f5a47c82e7f006de",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://6b9b6fe5b2e4ca967242b6724600e9af8b495e48ff29269b305b1a030d191e58",
				"dweb:/ipfs/QmP8w1Btgx7EzuvzHAP6qm4XCFVop1Wm7qcc2nfq7a4dVt"
			]
		},
		"contracts/Users.sol": {
			"keccak256": "0xb7f859c09e4a3ae2c7621b83f13cd28e45f5a4378759aaa66715caed66f5d07d",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://1d569f646fa91c7acc6b263ae15e042d6bdb80a1e8c0973b4aa4e6024b8a0225",
				"dweb:/ipfs/QmTSb5kQ7AjpPkZVpRXEouPPSijbSMPbRir9HFoXmsTtx5"
			]
		},
		"contracts/WhiteList.sol": {
			"keccak256": "0xc25fdef5d579a02a8d3c856de67796576aba85e1b5b19060889ce3d12a62c39f",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://f39b2f90bcd901fd875fbd597b7f9e7e5323e8ce46a906133ae3bc65d7ed6b13",
				"dweb:/ipfs/QmcFcA6eQpWsrDhZ3aG34ExopRM1iuNnY4ukAfTUBFrvxR"
			]
		}
	},
	"version": 1
}