{
	"id": "23a1590cc56be9e07353bbbbc2bb2f8f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Owner.sol": {
				"content": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: GPL-3.0\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address public owner;\n\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n    /**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */\n    constructor() public {\n        owner = msg.sender;\n    }\n\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not authorized operation\");\n        _;\n    }\n\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"Address shouldn't be zero\");\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Owner.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The Ownable contract has an owner address, and provides basic authorization control functions, this simplifies the implementation of \"user permissions\".",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "The Ownable constructor sets the original `owner` of the contract to the sender account."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Ownable",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Owner.sol\":252:1160  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Owner.sol\":518:574  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Owner.sol\":557:567  msg.sender */\n  caller\n    /* \"contracts/Owner.sol\":549:554  owner */\n  0x00\n  dup1\n    /* \"contracts/Owner.sol\":549:567  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Owner.sol\":252:1160  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Owner.sol\":252:1160  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Owner.sol\":275:295  address public owner */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Owner.sol\":940:1157  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/Owner.sol\":275:295  address public owner */\n    tag_6:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Owner.sol\":940:1157  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_12:\n        /* \"contracts/Owner.sol\":716:721  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owner.sol\":702:721  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owner.sol\":702:712  msg.sender */\n      caller\n        /* \"contracts/Owner.sol\":702:721  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Owner.sol\":694:750  require(msg.sender == owner, \"Not authorized operation\") */\n      tag_14\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n        /* \"contracts/Owner.sol\":1040:1041  0 */\n      0x00\n        /* \"contracts/Owner.sol\":1020:1042  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owner.sol\":1020:1028  newOwner */\n      dup2\n        /* \"contracts/Owner.sol\":1020:1042  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Owner.sol\":1012:1072  require(newOwner != address(0), \"Address shouldn't be zero\") */\n      tag_18\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_18:\n        /* \"contracts/Owner.sol\":1115:1123  newOwner */\n      dup1\n        /* \"contracts/Owner.sol\":1087:1124  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owner.sol\":1108:1113  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owner.sol\":1087:1124  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Owner.sol\":1142:1150  newOwner */\n      dup1\n        /* \"contracts/Owner.sol\":1134:1139  owner */\n      0x00\n      dup1\n        /* \"contracts/Owner.sol\":1134:1150  owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Owner.sol\":940:1157  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_22:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_24\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:414   */\n    tag_11:\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:230   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":276:277   */\n      0x00\n        /* \"#utility.yul\":273:274   */\n      dup1\n        /* \"#utility.yul\":266:278   */\n      revert\n        /* \"#utility.yul\":228:230   */\n    tag_27:\n        /* \"#utility.yul\":319:320   */\n      0x00\n        /* \"#utility.yul\":344:397   */\n      tag_28\n        /* \"#utility.yul\":389:396   */\n      dup5\n        /* \"#utility.yul\":380:386   */\n      dup3\n        /* \"#utility.yul\":369:378   */\n      dup6\n        /* \"#utility.yul\":365:387   */\n      add\n        /* \"#utility.yul\":344:397   */\n      tag_22\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":334:397   */\n      swap2\n      pop\n        /* \"#utility.yul\":290:407   */\n      pop\n        /* \"#utility.yul\":218:414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":420:538   */\n    tag_29:\n        /* \"#utility.yul\":507:531   */\n      tag_31\n        /* \"#utility.yul\":525:530   */\n      dup2\n        /* \"#utility.yul\":507:531   */\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":502:505   */\n      dup3\n        /* \"#utility.yul\":495:532   */\n      mstore\n        /* \"#utility.yul\":485:538   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":544:867   */\n    tag_33:\n      0x00\n        /* \"#utility.yul\":707:774   */\n      tag_35\n        /* \"#utility.yul\":771:773   */\n      0x19\n        /* \"#utility.yul\":766:769   */\n      dup4\n        /* \"#utility.yul\":707:774   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":700:774   */\n      swap2\n      pop\n        /* \"#utility.yul\":804:831   */\n      0x416464726573732073686f756c646e2774206265207a65726f00000000000000\n        /* \"#utility.yul\":800:801   */\n      0x00\n        /* \"#utility.yul\":795:798   */\n      dup4\n        /* \"#utility.yul\":791:802   */\n      add\n        /* \"#utility.yul\":784:832   */\n      mstore\n        /* \"#utility.yul\":858:860   */\n      0x20\n        /* \"#utility.yul\":853:856   */\n      dup3\n        /* \"#utility.yul\":849:861   */\n      add\n        /* \"#utility.yul\":842:861   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:867   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":873:1195   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":1036:1103   */\n      tag_39\n        /* \"#utility.yul\":1100:1102   */\n      0x18\n        /* \"#utility.yul\":1095:1098   */\n      dup4\n        /* \"#utility.yul\":1036:1103   */\n      tag_36\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1029:1103   */\n      swap2\n      pop\n        /* \"#utility.yul\":1133:1159   */\n      0x4e6f7420617574686f72697a6564206f7065726174696f6e0000000000000000\n        /* \"#utility.yul\":1129:1130   */\n      0x00\n        /* \"#utility.yul\":1124:1127   */\n      dup4\n        /* \"#utility.yul\":1120:1131   */\n      add\n        /* \"#utility.yul\":1113:1160   */\n      mstore\n        /* \"#utility.yul\":1186:1188   */\n      0x20\n        /* \"#utility.yul\":1181:1184   */\n      dup3\n        /* \"#utility.yul\":1177:1189   */\n      add\n        /* \"#utility.yul\":1170:1189   */\n      swap1\n      pop\n        /* \"#utility.yul\":1019:1195   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1201:1423   */\n    tag_8:\n      0x00\n        /* \"#utility.yul\":1332:1334   */\n      0x20\n        /* \"#utility.yul\":1321:1330   */\n      dup3\n        /* \"#utility.yul\":1317:1335   */\n      add\n        /* \"#utility.yul\":1309:1335   */\n      swap1\n      pop\n        /* \"#utility.yul\":1345:1416   */\n      tag_41\n        /* \"#utility.yul\":1413:1414   */\n      0x00\n        /* \"#utility.yul\":1402:1411   */\n      dup4\n        /* \"#utility.yul\":1398:1415   */\n      add\n        /* \"#utility.yul\":1389:1395   */\n      dup5\n        /* \"#utility.yul\":1345:1416   */\n      tag_29\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1299:1423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1429:1848   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":1633:1635   */\n      0x20\n        /* \"#utility.yul\":1622:1631   */\n      dup3\n        /* \"#utility.yul\":1618:1636   */\n      add\n        /* \"#utility.yul\":1610:1636   */\n      swap1\n      pop\n        /* \"#utility.yul\":1682:1691   */\n      dup2\n        /* \"#utility.yul\":1676:1680   */\n      dup2\n        /* \"#utility.yul\":1672:1692   */\n      sub\n        /* \"#utility.yul\":1668:1669   */\n      0x00\n        /* \"#utility.yul\":1657:1666   */\n      dup4\n        /* \"#utility.yul\":1653:1670   */\n      add\n        /* \"#utility.yul\":1646:1693   */\n      mstore\n        /* \"#utility.yul\":1710:1841   */\n      tag_43\n        /* \"#utility.yul\":1836:1840   */\n      dup2\n        /* \"#utility.yul\":1710:1841   */\n      tag_33\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1702:1841   */\n      swap1\n      pop\n        /* \"#utility.yul\":1600:1848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1854:2273   */\n    tag_16:\n      0x00\n        /* \"#utility.yul\":2058:2060   */\n      0x20\n        /* \"#utility.yul\":2047:2056   */\n      dup3\n        /* \"#utility.yul\":2043:2061   */\n      add\n        /* \"#utility.yul\":2035:2061   */\n      swap1\n      pop\n        /* \"#utility.yul\":2107:2116   */\n      dup2\n        /* \"#utility.yul\":2101:2105   */\n      dup2\n        /* \"#utility.yul\":2097:2117   */\n      sub\n        /* \"#utility.yul\":2093:2094   */\n      0x00\n        /* \"#utility.yul\":2082:2091   */\n      dup4\n        /* \"#utility.yul\":2078:2095   */\n      add\n        /* \"#utility.yul\":2071:2118   */\n      mstore\n        /* \"#utility.yul\":2135:2266   */\n      tag_45\n        /* \"#utility.yul\":2261:2265   */\n      dup2\n        /* \"#utility.yul\":2135:2266   */\n      tag_37\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":2127:2266   */\n      swap1\n      pop\n        /* \"#utility.yul\":2025:2273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2279:2448   */\n    tag_36:\n      0x00\n        /* \"#utility.yul\":2397:2403   */\n      dup3\n        /* \"#utility.yul\":2392:2395   */\n      dup3\n        /* \"#utility.yul\":2385:2404   */\n      mstore\n        /* \"#utility.yul\":2437:2441   */\n      0x20\n        /* \"#utility.yul\":2432:2435   */\n      dup3\n        /* \"#utility.yul\":2428:2442   */\n      add\n        /* \"#utility.yul\":2413:2442   */\n      swap1\n      pop\n        /* \"#utility.yul\":2375:2448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2454:2550   */\n    tag_32:\n      0x00\n        /* \"#utility.yul\":2520:2544   */\n      tag_48\n        /* \"#utility.yul\":2538:2543   */\n      dup3\n        /* \"#utility.yul\":2520:2544   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":2509:2544   */\n      swap1\n      pop\n        /* \"#utility.yul\":2499:2550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2556:2682   */\n    tag_49:\n      0x00\n        /* \"#utility.yul\":2633:2675   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2626:2631   */\n      dup3\n        /* \"#utility.yul\":2622:2676   */\n      and\n        /* \"#utility.yul\":2611:2676   */\n      swap1\n      pop\n        /* \"#utility.yul\":2601:2682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2688:2810   */\n    tag_25:\n        /* \"#utility.yul\":2761:2785   */\n      tag_52\n        /* \"#utility.yul\":2779:2784   */\n      dup2\n        /* \"#utility.yul\":2761:2785   */\n      tag_32\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":2754:2759   */\n      dup2\n        /* \"#utility.yul\":2751:2786   */\n      eq\n        /* \"#utility.yul\":2741:2743   */\n      tag_53\n      jumpi\n        /* \"#utility.yul\":2800:2801   */\n      0x00\n        /* \"#utility.yul\":2797:2798   */\n      dup1\n        /* \"#utility.yul\":2790:2802   */\n      revert\n        /* \"#utility.yul\":2741:2743   */\n    tag_53:\n        /* \"#utility.yul\":2731:2810   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220243dd3290aada2d29326eb9c80c84832026393a8d2db1ea79b46110cec77a15564736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061040c806100606000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b14610059575b600080fd5b610043610075565b6040516100509190610321565b60405180910390f35b610073600480360381019061006e9190610269565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e9061035c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018e9061033c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081359050610263816103bf565b92915050565b60006020828403121561027b57600080fd5b600061028984828501610254565b91505092915050565b61029b8161038d565b82525050565b60006102ae60198361037c565b91507f416464726573732073686f756c646e2774206265207a65726f000000000000006000830152602082019050919050565b60006102ee60188361037c565b91507f4e6f7420617574686f72697a6564206f7065726174696f6e00000000000000006000830152602082019050919050565b60006020820190506103366000830184610292565b92915050565b60006020820190508181036000830152610355816102a1565b9050919050565b60006020820190508181036000830152610375816102e1565b9050919050565b600082825260208201905092915050565b60006103988261039f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6103c88161038d565b81146103d357600080fd5b5056fea2646970667358221220243dd3290aada2d29326eb9c80c84832026393a8d2db1ea79b46110cec77a15564736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x40C DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x269 JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E SWAP1 PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x197 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E SWAP1 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x263 DUP2 PUSH2 0x3BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x289 DUP5 DUP3 DUP6 ADD PUSH2 0x254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29B DUP2 PUSH2 0x38D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AE PUSH1 0x19 DUP4 PUSH2 0x37C JUMP JUMPDEST SWAP2 POP PUSH32 0x416464726573732073686F756C646E2774206265207A65726F00000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE PUSH1 0x18 DUP4 PUSH2 0x37C JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F7420617574686F72697A6564206F7065726174696F6E0000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x336 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x355 DUP2 PUSH2 0x2A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x375 DUP2 PUSH2 0x2E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x398 DUP3 PUSH2 0x39F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C8 DUP2 PUSH2 0x38D JUMP JUMPDEST DUP2 EQ PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 RETURNDATASIZE 0xD3 0x29 EXP 0xAD LOG2 0xD2 SWAP4 0x26 0xEB SWAP13 DUP1 0xC8 0x48 ORIGIN MUL PUSH4 0x93A8D2DB 0x1E 0xA7 SWAP12 CHAINID GT 0xC 0xEC PUSH24 0xA15564736F6C634300080000330000000000000000000000 ",
							"sourceMap": "252:908:0:-:0;;;518:56;;;;;;;;;;557:10;549:5;;:18;;;;;;;;;;;;;;;;;;252:908;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2813:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "273:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "276:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "290:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "305:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "319:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "309:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "334:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "369:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "389:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "344:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "344:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "334:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "485:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "502:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "525:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "507:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "495:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "495:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "480:3:1",
														"type": ""
													}
												],
												"src": "420:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "690:177:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "700:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "766:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "771:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "700:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "795:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "800:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "791:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "791:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "804:27:1",
																		"type": "",
																		"value": "Address shouldn't be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "784:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "842:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "853:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "858:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "849:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "849:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "842:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_78196f6b6762a37b8ac6626c26c73afd2c5232ac191cba23dfa64e2ad0293cdd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "678:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "686:3:1",
														"type": ""
													}
												],
												"src": "544:323:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1019:176:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1029:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1095:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1100:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1036:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1036:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1029:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1124:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1129:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1120:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1120:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1133:26:1",
																		"type": "",
																		"value": "Not authorized operation"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1113:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1170:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1181:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1186:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1177:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1177:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1170:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dacbb514e0d6965d0eef68be28847a343dfe47343d53a483124cc3e24746dad2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1007:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1015:3:1",
														"type": ""
													}
												],
												"src": "873:322:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1299:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1309:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1321:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1332:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1317:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1317:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1309:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1389:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1402:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1413:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1345:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1345:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1271:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1283:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1294:4:1",
														"type": ""
													}
												],
												"src": "1201:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1600:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1610:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1622:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1633:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1618:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1618:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1610:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1657:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1668:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1653:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1653:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1676:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1682:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1672:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1646:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1702:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1836:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_78196f6b6762a37b8ac6626c26c73afd2c5232ac191cba23dfa64e2ad0293cdd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1710:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1702:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78196f6b6762a37b8ac6626c26c73afd2c5232ac191cba23dfa64e2ad0293cdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1580:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1595:4:1",
														"type": ""
													}
												],
												"src": "1429:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2025:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2035:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2047:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2058:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2043:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2035:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2082:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2093:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2078:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2078:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2101:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2107:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2097:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2097:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2071:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2071:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2071:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2127:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2261:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dacbb514e0d6965d0eef68be28847a343dfe47343d53a483124cc3e24746dad2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2135:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2127:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dacbb514e0d6965d0eef68be28847a343dfe47343d53a483124cc3e24746dad2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2005:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2020:4:1",
														"type": ""
													}
												],
												"src": "1854:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2375:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2392:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2397:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2385:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2385:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2413:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2432:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2437:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2428:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2428:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2413:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2347:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2352:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2363:11:1",
														"type": ""
													}
												],
												"src": "2279:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2499:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2509:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2538:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2520:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2520:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2509:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2481:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2491:7:1",
														"type": ""
													}
												],
												"src": "2454:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2601:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2611:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2626:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2633:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2622:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2611:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2583:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2593:7:1",
														"type": ""
													}
												],
												"src": "2556:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2731:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2788:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2797:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2800:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2790:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2790:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2790:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2754:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2779:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2761:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2761:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2751:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2751:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:43:1"
															},
															"nodeType": "YulIf",
															"src": "2741:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2724:5:1",
														"type": ""
													}
												],
												"src": "2688:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_78196f6b6762a37b8ac6626c26c73afd2c5232ac191cba23dfa64e2ad0293cdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n\n        mstore(add(pos, 0), \"Address shouldn't be zero\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_dacbb514e0d6965d0eef68be28847a343dfe47343d53a483124cc3e24746dad2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n\n        mstore(add(pos, 0), \"Not authorized operation\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_78196f6b6762a37b8ac6626c26c73afd2c5232ac191cba23dfa64e2ad0293cdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_78196f6b6762a37b8ac6626c26c73afd2c5232ac191cba23dfa64e2ad0293cdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_dacbb514e0d6965d0eef68be28847a343dfe47343d53a483124cc3e24746dad2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dacbb514e0d6965d0eef68be28847a343dfe47343d53a483124cc3e24746dad2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b14610059575b600080fd5b610043610075565b6040516100509190610321565b60405180910390f35b610073600480360381019061006e9190610269565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e9061035c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018e9061033c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081359050610263816103bf565b92915050565b60006020828403121561027b57600080fd5b600061028984828501610254565b91505092915050565b61029b8161038d565b82525050565b60006102ae60198361037c565b91507f416464726573732073686f756c646e2774206265207a65726f000000000000006000830152602082019050919050565b60006102ee60188361037c565b91507f4e6f7420617574686f72697a6564206f7065726174696f6e00000000000000006000830152602082019050919050565b60006020820190506103366000830184610292565b92915050565b60006020820190508181036000830152610355816102a1565b9050919050565b60006020820190508181036000830152610375816102e1565b9050919050565b600082825260208201905092915050565b60006103988261039f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6103c88161038d565b81146103d357600080fd5b5056fea2646970667358221220243dd3290aada2d29326eb9c80c84832026393a8d2db1ea79b46110cec77a15564736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x269 JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E SWAP1 PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x197 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E SWAP1 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x263 DUP2 PUSH2 0x3BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x289 DUP5 DUP3 DUP6 ADD PUSH2 0x254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29B DUP2 PUSH2 0x38D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AE PUSH1 0x19 DUP4 PUSH2 0x37C JUMP JUMPDEST SWAP2 POP PUSH32 0x416464726573732073686F756C646E2774206265207A65726F00000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE PUSH1 0x18 DUP4 PUSH2 0x37C JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F7420617574686F72697A6564206F7065726174696F6E0000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x336 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x355 DUP2 PUSH2 0x2A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x375 DUP2 PUSH2 0x2E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x398 DUP3 PUSH2 0x39F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C8 DUP2 PUSH2 0x38D JUMP JUMPDEST DUP2 EQ PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 RETURNDATASIZE 0xD3 0x29 EXP 0xAD LOG2 0xD2 SWAP4 0x26 0xEB SWAP13 DUP1 0xC8 0x48 ORIGIN MUL PUSH4 0x93A8D2DB 0x1E 0xA7 SWAP12 CHAINID GT 0xC 0xEC PUSH24 0xA15564736F6C634300080000330000000000000000000000 ",
							"sourceMap": "252:908:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;275:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;940:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;275:20;;;;;;;;;;;;:::o;940:217::-;716:5;;;;;;;;;;702:19;;:10;:19;;;694:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1040:1:::1;1020:22;;:8;:22;;;;1012:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1115:8;1087:37;;1108:5;::::0;::::1;;;;;;;;1087:37;;;;;;;;;;;;1142:8;1134:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;940:217:::0;:::o;7:139:1:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:323::-;;707:67;771:2;766:3;707:67;:::i;:::-;700:74;;804:27;800:1;795:3;791:11;784:48;858:2;853:3;849:12;842:19;;690:177;;;:::o;873:322::-;;1036:67;1100:2;1095:3;1036:67;:::i;:::-;1029:74;;1133:26;1129:1;1124:3;1120:11;1113:47;1186:2;1181:3;1177:12;1170:19;;1019:176;;;:::o;1201:222::-;;1332:2;1321:9;1317:18;1309:26;;1345:71;1413:1;1402:9;1398:17;1389:6;1345:71;:::i;:::-;1299:124;;;;:::o;1429:419::-;;1633:2;1622:9;1618:18;1610:26;;1682:9;1676:4;1672:20;1668:1;1657:9;1653:17;1646:47;1710:131;1836:4;1710:131;:::i;:::-;1702:139;;1600:248;;;:::o;1854:419::-;;2058:2;2047:9;2043:18;2035:26;;2107:9;2101:4;2097:20;2093:1;2082:9;2078:17;2071:47;2135:131;2261:4;2135:131;:::i;:::-;2127:139;;2025:248;;;:::o;2279:169::-;;2397:6;2392:3;2385:19;2437:4;2432:3;2428:14;2413:29;;2375:73;;;;:::o;2454:96::-;;2520:24;2538:5;2520:24;:::i;:::-;2509:35;;2499:51;;;:::o;2556:126::-;;2633:42;2626:5;2622:54;2611:65;;2601:81;;;:::o;2688:122::-;2761:24;2779:5;2761:24;:::i;:::-;2754:5;2751:35;2741:2;;2800:1;2797;2790:12;2741:2;2731:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "207200",
								"executionCost": "21117",
								"totalCost": "228317"
							},
							"external": {
								"owner()": "1189",
								"transferOwnership(address)": "24605"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 252,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 252,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 1160,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 518,
									"end": 574,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 518,
									"end": 574,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 518,
									"end": 574,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 518,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 518,
									"end": 574,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 518,
									"end": 574,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 518,
									"end": 574,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 518,
									"end": 574,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 518,
									"end": 574,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 518,
									"end": 574,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 518,
									"end": 574,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 557,
									"end": 567,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 549,
									"end": 554,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 554,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 549,
									"end": 567,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 549,
									"end": 567,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 549,
									"end": 567,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 549,
									"end": 567,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 549,
									"end": 567,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 549,
									"end": 567,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 549,
									"end": 567,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 549,
									"end": 567,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 549,
									"end": 567,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 549,
									"end": 567,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 549,
									"end": 567,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 549,
									"end": 567,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 549,
									"end": 567,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 549,
									"end": 567,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 549,
									"end": 567,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 549,
									"end": 567,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 549,
									"end": 567,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 549,
									"end": 567,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 252,
									"end": 1160,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 1160,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 252,
									"end": 1160,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 1160,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 252,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 1160,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220243dd3290aada2d29326eb9c80c84832026393a8d2db1ea79b46110cec77a15564736f6c63430008000033",
									".code": [
										{
											"begin": 252,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 1160,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 716,
											"end": 721,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 716,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 716,
											"end": 721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 702,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 702,
											"end": 721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 702,
											"end": 712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 702,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 702,
											"end": 721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 702,
											"end": 721,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 694,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 694,
											"end": 750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 694,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 694,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 694,
											"end": 750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 694,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 694,
											"end": 750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 694,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 694,
											"end": 750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 694,
											"end": 750,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 694,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 694,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 694,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 694,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 694,
											"end": 750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 750,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 694,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 694,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1042,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1020,
											"end": 1042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1020,
											"end": 1028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1020,
											"end": 1042,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1020,
											"end": 1042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1020,
											"end": 1042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1020,
											"end": 1042,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 1139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 1157,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 230,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 276,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 278,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 230,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 319,
											"end": 320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 378,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 365,
											"end": 387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 334,
											"end": 397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 290,
											"end": 407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 420,
											"end": 538,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 420,
											"end": 538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 507,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 525,
											"end": 530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 507,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 495,
											"end": 532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 485,
											"end": 538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 485,
											"end": 538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 485,
											"end": 538,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 544,
											"end": 867,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 544,
											"end": 867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 544,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 771,
											"end": 773,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 766,
											"end": 769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 707,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 700,
											"end": 774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 700,
											"end": 774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 831,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573732073686F756C646E2774206265207A65726F00000000000000"
										},
										{
											"begin": 800,
											"end": 801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 798,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 791,
											"end": 802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 784,
											"end": 832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 858,
											"end": 860,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 849,
											"end": 861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 842,
											"end": 861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 842,
											"end": 861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 867,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 873,
											"end": 1195,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 873,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 873,
											"end": 1195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1095,
											"end": 1098,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1036,
											"end": 1103,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1103,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1036,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F7420617574686F72697A6564206F7065726174696F6E0000000000000000"
										},
										{
											"begin": 1129,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1160,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1188,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1195,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1423,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1201,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1321,
											"end": 1330,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1411,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1345,
											"end": 1416,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1345,
											"end": 1416,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1345,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1423,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1423,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1429,
											"end": 1848,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1693,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1836,
											"end": 1840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1710,
											"end": 1841,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1841,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1710,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1848,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1854,
											"end": 2273,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1854,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 2273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2047,
											"end": 2056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2117,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2091,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2261,
											"end": 2265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2135,
											"end": 2266,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2266,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2135,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2273,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2279,
											"end": 2448,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2279,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2413,
											"end": 2442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2413,
											"end": 2442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2448,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2448,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2454,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2454,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2454,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2538,
											"end": 2543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2520,
											"end": 2544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2520,
											"end": 2544,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2520,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2550,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2556,
											"end": 2682,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2556,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2676,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2682,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2688,
											"end": 2810,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2688,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2761,
											"end": 2785,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2761,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2761,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2786,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2741,
											"end": 2743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2800,
											"end": 2801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2741,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2810,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The Ownable contract has an owner address, and provides basic authorization control functions, this simplifies the implementation of \\\"user permissions\\\".\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender account.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Owner.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Owner.sol\":{\"keccak256\":\"0xdf7c12d0e5e7a54bc5271036ce6322acf25111218ad2cd11e34893d85819ca25\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://24fe99e9a5b5d545abb5128836ffeb2949c2fd9ca64c427a974ae4deac03cece\",\"dweb:/ipfs/QmPhC65ozpwvVU2rXhb19hWqgXFyTer4sknqryba8a1gjh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/Owner.sol:Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/Owner.sol:21:5:\n   |\n21 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 574,
					"file": "contracts/Owner.sol",
					"start": 518
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Owner.sol": {
				"ast": {
					"absolutePath": "contracts/Owner.sol",
					"exportedSymbols": {
						"Ownable": [
							62
						]
					},
					"id": 63,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "62:189:0",
								"text": " @title Ownable\n @dev The Ownable contract has an owner address, and provides basic authorization control\n functions, this simplifies the implementation of \"user permissions\"."
							},
							"fullyImplemented": true,
							"id": 62,
							"linearizedBaseContracts": [
								62
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 4,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 62,
									"src": "275:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "275:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 10,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "330:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "361:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "329:57:0"
									},
									"src": "303:84:0"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "539:35:0",
										"statements": [
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 14,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "549:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 15,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "557:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "557:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "549:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "549:18:0"
											}
										]
									},
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "394:119:0",
										"text": " @dev The Ownable constructor sets the original `owner` of the contract to the sender\n account."
									},
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "539:0:0"
									},
									"scope": 62,
									"src": "518:56:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "684:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 24,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "702:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "702:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 26,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "716:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "702:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564206f7065726174696f6e",
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "723:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dacbb514e0d6965d0eef68be28847a343dfe47343d53a483124cc3e24746dad2",
																"typeString": "literal_string \"Not authorized operation\""
															},
															"value": "Not authorized operation"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dacbb514e0d6965d0eef68be28847a343dfe47343d53a483124cc3e24746dad2",
																"typeString": "literal_string \"Not authorized operation\""
															}
														],
														"id": 23,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "694:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "694:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "694:56:0"
											},
											{
												"id": 31,
												"nodeType": "PlaceholderStatement",
												"src": "760:1:0"
											}
										]
									},
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "581:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 33,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:2:0"
									},
									"src": "663:105:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "1002:155:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 42,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "1020:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 45,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1040:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1032:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 43,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1032:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1032:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1020:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573732073686f756c646e2774206265207a65726f",
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1044:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78196f6b6762a37b8ac6626c26c73afd2c5232ac191cba23dfa64e2ad0293cdd",
																"typeString": "literal_string \"Address shouldn't be zero\""
															},
															"value": "Address shouldn't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78196f6b6762a37b8ac6626c26c73afd2c5232ac191cba23dfa64e2ad0293cdd",
																"typeString": "literal_string \"Address shouldn't be zero\""
															}
														],
														"id": 41,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1012:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "1012:60:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 52,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "1108:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 53,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "1115:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 51,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1087:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "EmitStatement",
												"src": "1082:42:0"
											},
											{
												"expression": {
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 56,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1134:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 57,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1142:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1134:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "1134:16:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "775:160:0",
										"text": " @dev Allows the current owner to transfer control of the contract to a newOwner.\n @param newOwner The address to transfer ownership to."
									},
									"functionSelector": "f2fde38b",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 39,
											"modifierName": {
												"id": 38,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 33,
												"src": "992:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "992:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "967:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:18:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1002:0:0"
									},
									"scope": 62,
									"src": "940:217:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 63,
							"src": "252:908:0"
						}
					],
					"src": "0:1160:0"
				},
				"id": 0
			}
		}
	}
}